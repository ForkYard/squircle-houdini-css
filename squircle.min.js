const drawSquircle=(e,i,t,r,h,l)=>{const o=l,s=h/2;e.beginPath(),e.lineTo(t,s),e.lineTo(i.width-t,s),e.bezierCurveTo(i.width-t/r,s,i.width-s,t/r,i.width-s,t),e.lineTo(i.width-s,i.height-t),e.bezierCurveTo(i.width-s,i.height-t/r,i.width-t/r,i.height-s,i.width-t,i.height-s),e.lineTo(t,i.height-s),e.bezierCurveTo(t/r,i.height-s,s,i.height-t/r,s,i.height-t),e.lineTo(s,t),e.bezierCurveTo(s,t/r,t/r,s,t,s),e.closePath(),h?(e.strokeStyle=o,e.lineWidth=h,e.stroke()):(e.fillStyle=o,e.fill())};registerPaint("squircle",class{static get inputProperties(){return["--squircle-radius","--squircle-smooth","--squircle-outline","--squircle-color"]}paint(e,i,t){const r=10*t.get("--squircle-smooth"),h=1.8*parseInt(t.get("--squircle-radius"),10),l=parseInt(t.get("--squircle-outline"),10),o=t.get("--squircle-color").toString().replace(/\s/g,""),s=()=>""!==r?0===r?1:r:8,u=()=>l||0,c=()=>o||"#f45";h<i.width/2&&h<i.height/2?drawSquircle(e,i,h,s(),u(),c()):drawSquircle(e,i,Math.min(i.width/2,i.height/2),s(),u(),c())}});